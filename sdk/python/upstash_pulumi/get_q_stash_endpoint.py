# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities

__all__ = [
    'GetQStashEndpointResult',
    'AwaitableGetQStashEndpointResult',
    'get_q_stash_endpoint',
    'get_q_stash_endpoint_output',
]

@pulumi.output_type
class GetQStashEndpointResult:
    """
    A collection of values returned by getQStashEndpoint.
    """
    def __init__(__self__, endpoint_id=None, id=None, topic_id=None, url=None):
        if endpoint_id and not isinstance(endpoint_id, str):
            raise TypeError("Expected argument 'endpoint_id' to be a str")
        pulumi.set(__self__, "endpoint_id", endpoint_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if topic_id and not isinstance(topic_id, str):
            raise TypeError("Expected argument 'topic_id' to be a str")
        pulumi.set(__self__, "topic_id", topic_id)
        if url and not isinstance(url, str):
            raise TypeError("Expected argument 'url' to be a str")
        pulumi.set(__self__, "url", url)

    @property
    @pulumi.getter(name="endpointId")
    def endpoint_id(self) -> str:
        return pulumi.get(self, "endpoint_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="topicId")
    def topic_id(self) -> str:
        return pulumi.get(self, "topic_id")

    @property
    @pulumi.getter
    def url(self) -> str:
        return pulumi.get(self, "url")


class AwaitableGetQStashEndpointResult(GetQStashEndpointResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetQStashEndpointResult(
            endpoint_id=self.endpoint_id,
            id=self.id,
            topic_id=self.topic_id,
            url=self.url)


def get_q_stash_endpoint(topic_id: Optional[str] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetQStashEndpointResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['topicId'] = topic_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
        if opts.plugin_download_url is None:
            opts.plugin_download_url = _utilities.get_plugin_download_url()
    __ret__ = pulumi.runtime.invoke('upstash:index/getQStashEndpoint:getQStashEndpoint', __args__, opts=opts, typ=GetQStashEndpointResult).value

    return AwaitableGetQStashEndpointResult(
        endpoint_id=__ret__.endpoint_id,
        id=__ret__.id,
        topic_id=__ret__.topic_id,
        url=__ret__.url)


@_utilities.lift_output_func(get_q_stash_endpoint)
def get_q_stash_endpoint_output(topic_id: Optional[pulumi.Input[str]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetQStashEndpointResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
