// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Upstash
{
    [UpstashResourceType("upstash:index/team:Team")]
    public partial class Team : Pulumi.CustomResource
    {
        /// <summary>
        /// Whether Credit Card is copied
        /// </summary>
        [Output("copyCc")]
        public Output<bool> CopyCc { get; private set; } = null!;

        /// <summary>
        /// Unique Cluster ID for created cluster
        /// </summary>
        [Output("teamId")]
        public Output<string> TeamId { get; private set; } = null!;

        /// <summary>
        /// Members of the team. (Owner must be specified, which is the owner of the api key.)
        /// </summary>
        [Output("teamMembers")]
        public Output<ImmutableDictionary<string, string>> TeamMembers { get; private set; } = null!;

        /// <summary>
        /// Name of the team
        /// </summary>
        [Output("teamName")]
        public Output<string> TeamName { get; private set; } = null!;


        /// <summary>
        /// Create a Team resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Team(string name, TeamArgs args, CustomResourceOptions? options = null)
            : base("upstash:index/team:Team", name, args ?? new TeamArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Team(string name, Input<string> id, TeamState? state = null, CustomResourceOptions? options = null)
            : base("upstash:index/team:Team", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/upstash/pulumi-upstash",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Team resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Team Get(string name, Input<string> id, TeamState? state = null, CustomResourceOptions? options = null)
        {
            return new Team(name, id, state, options);
        }
    }

    public sealed class TeamArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Credit Card is copied
        /// </summary>
        [Input("copyCc", required: true)]
        public Input<bool> CopyCc { get; set; } = null!;

        [Input("teamMembers", required: true)]
        private InputMap<string>? _teamMembers;

        /// <summary>
        /// Members of the team. (Owner must be specified, which is the owner of the api key.)
        /// </summary>
        public InputMap<string> TeamMembers
        {
            get => _teamMembers ?? (_teamMembers = new InputMap<string>());
            set => _teamMembers = value;
        }

        /// <summary>
        /// Name of the team
        /// </summary>
        [Input("teamName", required: true)]
        public Input<string> TeamName { get; set; } = null!;

        public TeamArgs()
        {
        }
    }

    public sealed class TeamState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether Credit Card is copied
        /// </summary>
        [Input("copyCc")]
        public Input<bool>? CopyCc { get; set; }

        /// <summary>
        /// Unique Cluster ID for created cluster
        /// </summary>
        [Input("teamId")]
        public Input<string>? TeamId { get; set; }

        [Input("teamMembers")]
        private InputMap<string>? _teamMembers;

        /// <summary>
        /// Members of the team. (Owner must be specified, which is the owner of the api key.)
        /// </summary>
        public InputMap<string> TeamMembers
        {
            get => _teamMembers ?? (_teamMembers = new InputMap<string>());
            set => _teamMembers = value;
        }

        /// <summary>
        /// Name of the team
        /// </summary>
        [Input("teamName")]
        public Input<string>? TeamName { get; set; }

        public TeamState()
        {
        }
    }
}
