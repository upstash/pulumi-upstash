// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Upstash
{
    [UpstashResourceType("upstash:index/qStashEndpoint:QStashEndpoint")]
    public partial class QStashEndpoint : Pulumi.CustomResource
    {
        /// <summary>
        /// Unique Qstash Endpoint ID
        /// </summary>
        [Output("endpointId")]
        public Output<string> EndpointId { get; private set; } = null!;

        /// <summary>
        /// Topic Id that the endpoint is added to
        /// </summary>
        [Output("topicId")]
        public Output<string> TopicId { get; private set; } = null!;

        /// <summary>
        /// Unique Qstash Topic Name for Endpoint
        /// </summary>
        [Output("topicName")]
        public Output<string> TopicName { get; private set; } = null!;

        /// <summary>
        /// URL of the endpoint
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a QStashEndpoint resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public QStashEndpoint(string name, QStashEndpointArgs args, CustomResourceOptions? options = null)
            : base("upstash:index/qStashEndpoint:QStashEndpoint", name, args ?? new QStashEndpointArgs(), MakeResourceOptions(options, ""))
        {
        }

        private QStashEndpoint(string name, Input<string> id, QStashEndpointState? state = null, CustomResourceOptions? options = null)
            : base("upstash:index/qStashEndpoint:QStashEndpoint", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/upstash/pulumi-upstash",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing QStashEndpoint resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static QStashEndpoint Get(string name, Input<string> id, QStashEndpointState? state = null, CustomResourceOptions? options = null)
        {
            return new QStashEndpoint(name, id, state, options);
        }
    }

    public sealed class QStashEndpointArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Topic Id that the endpoint is added to
        /// </summary>
        [Input("topicId", required: true)]
        public Input<string> TopicId { get; set; } = null!;

        /// <summary>
        /// URL of the endpoint
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public QStashEndpointArgs()
        {
        }
    }

    public sealed class QStashEndpointState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Unique Qstash Endpoint ID
        /// </summary>
        [Input("endpointId")]
        public Input<string>? EndpointId { get; set; }

        /// <summary>
        /// Topic Id that the endpoint is added to
        /// </summary>
        [Input("topicId")]
        public Input<string>? TopicId { get; set; }

        /// <summary>
        /// Unique Qstash Topic Name for Endpoint
        /// </summary>
        [Input("topicName")]
        public Input<string>? TopicName { get; set; }

        /// <summary>
        /// URL of the endpoint
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public QStashEndpointState()
        {
        }
    }
}
