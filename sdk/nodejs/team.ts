// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class Team extends pulumi.CustomResource {
    /**
     * Get an existing Team resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: TeamState, opts?: pulumi.CustomResourceOptions): Team {
        return new Team(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'upstash:index/team:Team';

    /**
     * Returns true if the given object is an instance of Team.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Team {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Team.__pulumiType;
    }

    /**
     * Whether Credit Card is copied
     */
    public readonly copyCc!: pulumi.Output<boolean>;
    /**
     * Unique Cluster ID for created cluster
     */
    public /*out*/ readonly teamId!: pulumi.Output<string>;
    /**
     * Members of the team. (Owner must be specified, which is the owner of the api key.)
     */
    public readonly teamMembers!: pulumi.Output<{[key: string]: string}>;
    /**
     * Name of the team
     */
    public readonly teamName!: pulumi.Output<string>;

    /**
     * Create a Team resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: TeamArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: TeamArgs | TeamState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as TeamState | undefined;
            resourceInputs["copyCc"] = state ? state.copyCc : undefined;
            resourceInputs["teamId"] = state ? state.teamId : undefined;
            resourceInputs["teamMembers"] = state ? state.teamMembers : undefined;
            resourceInputs["teamName"] = state ? state.teamName : undefined;
        } else {
            const args = argsOrState as TeamArgs | undefined;
            if ((!args || args.copyCc === undefined) && !opts.urn) {
                throw new Error("Missing required property 'copyCc'");
            }
            if ((!args || args.teamMembers === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamMembers'");
            }
            if ((!args || args.teamName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'teamName'");
            }
            resourceInputs["copyCc"] = args ? args.copyCc : undefined;
            resourceInputs["teamMembers"] = args ? args.teamMembers : undefined;
            resourceInputs["teamName"] = args ? args.teamName : undefined;
            resourceInputs["teamId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Team.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Team resources.
 */
export interface TeamState {
    /**
     * Whether Credit Card is copied
     */
    copyCc?: pulumi.Input<boolean>;
    /**
     * Unique Cluster ID for created cluster
     */
    teamId?: pulumi.Input<string>;
    /**
     * Members of the team. (Owner must be specified, which is the owner of the api key.)
     */
    teamMembers?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the team
     */
    teamName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Team resource.
 */
export interface TeamArgs {
    /**
     * Whether Credit Card is copied
     */
    copyCc: pulumi.Input<boolean>;
    /**
     * Members of the team. (Owner must be specified, which is the owner of the api key.)
     */
    teamMembers: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Name of the team
     */
    teamName: pulumi.Input<string>;
}
